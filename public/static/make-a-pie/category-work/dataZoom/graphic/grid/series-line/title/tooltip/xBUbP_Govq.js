var top=40,left=70,right=18,bottom=30,minX="",maxX="",minY="",maxY="",xName="风扇转速",yName="温度",text="CPU风扇",xUnit="℃",yUnit="%",symbolSize=30,list=[[10,20],[30,40],[60,70],[100,90]],maxVal=0,_data=list.map(t=>t[0]);_data.sort((t,e)=>e-t),_data.length>0&&(maxVal=_data[0]),option={title:{text,x:"left",textStyle:{color:"#333",fontWeight:400,fontSize:14}},tooltip:{triggerOn:"none",backgroundColor:"#39404D",borderColor:"rgba(234, 247, 255, 0.3)",textStyle:{color:"#EAF7FF",fontSize:13},borderRadius:"none",formatter(t){return t.data[0].toFixed(0)+xUnit+" / "+t.data[1].toFixed(0)+yUnit},padding:[4,8,4,8]},grid:{top:top+"px",left:left+"px",right:right+"px",bottom:bottom+"px"},xAxis:{min:0,max:maxVal,type:"value",name:xName,nameLocation:"start",axisLabel:{showMaxLable:!0,showMinLable:!1,formatter(t){return t!==maxVal?"":t+xUnit}},splitLine:{lineStyle:{type:"dashed",width:.5,color:"#39404D"},show:!0},axisLine:{onZero:!1}},yAxis:{min:0,max:100,type:"value",name:yName,nameLocation:"start",axisLine:{onZero:!1},axisLabel:{color:"rgba(234, 247, 255, 0.4)",showMaxLable:!0,showMinLable:!1,formatter(t){return t===0?"":t+yUnit}},splitLine:{lineStyle:{type:"dashed",width:.5,color:"#39404D"},show:!0}},dataZoom:{show:!1},series:[{id:"a",type:"line",smooth:!0,symbolSize:30,data:list,legendHoverLink:!1,emphasis:{scale:!1},areaStyle:{normal:{color:{x:0,y:0,x2:0,y2:1,colorStops:[{offset:0,color:"rgba(234, 247, 255, 0.3)"},{offset:1,color:"rgba(234, 247, 255, 0)"}],globalCoord:!1}}}}]},setTimeout(function(){myChart.setOption({graphic:echarts.util.map(list,(t,e)=>{const l=this;return{type:"circle",shape:{r:symbolSize/2},position:myChart.convertToPixel("grid",t),invisible:!0,draggable:!0,z:100,ondrag:function(a,i){this.y>maxY?this.y=maxY-1:this.y<minY&&(this.y=minY+1),this.x>maxX?this.x=maxX-1:this.x<minX&&(this.x=minX-1),onPointDragging(e,[this.x,this.y])},onmousemove:function(){showTooltip(e)},onmousedown:function(){let a=null;list[e-1]&&(a=myChart.convertToPixel("grid",list[e-1]));let i=null;list[e+1]&&(i=myChart.convertToPixel("grid",list[e+1]));let h=myChart.convertToPixel("grid",list[e]);var o=0,r=0,s=0,n=0;a?(o=a[0],r=a[1]):i?h[1]>i[1]?(o=left+1,r=myChart.getHeight()-bottom):(o=left+1,r=i[1]):(o=myChart.getWidth()-(right+1),r=myChart.getHeight()-bottom),i?(s=i[0],n=i[1]):a?h[1]>a[1]?(s=myChart.getWidth()-(right+1),n=myChart.getHeight()-bottom):(s=myChart.getWidth()-(right+1),n=top):(o=myChart.getWidth()-(right+1),r=myChart.getHeight()-bottom),o>=s?(minX=s,maxX=o):(minX=o,maxX=s),r>=n?(minY=n,maxY=r):(minY=r,maxY=n)},onmouseout:function(){hideTooltip(e)}}})})},0);function showTooltip(t){myChart.dispatchAction({type:"showTip",seriesIndex:0,dataIndex:t})}function hideTooltip(t){myChart.dispatchAction({type:"hideTip"})}function onPointDragging(t,e){let l=myChart.convertFromPixel("grid",e);list[t][0]=l[0],list[t][1]=l[1],myChart.setOption({series:[{id:"a",data:list}]})}
