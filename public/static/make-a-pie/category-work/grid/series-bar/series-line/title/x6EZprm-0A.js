const srcData=[["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],[-220,-182,-191,-234,-290,-330,-310],[2.2,1.82,1.91,2.34,1.9,2.3,2.1]],getValueExtend=(a,i)=>{let t=Math.min(...a),e=Math.max(...a);return t>0&&i&&(t=0),e<0&&i&&(e=0),[t,e]},roundNumber=echarts.number.round,getPrecision=echarts.number.getPrecision,niceValueExtend=(a,i=5)=>{const[t,e]=a,o=(e-t)/i,n=echarts.number.nice(o,!0),c=getPrecision(n),s=roundNumber(Math.floor(t/n)*n,c),m=roundNumber(Math.ceil(e/n)*n,c);return{min:s,max:m,interval:n}},subNice=a=>{const i=[1,1.2,1.5,2,2.5,3,4,5,6,8,10],t=echarts.number.quantityExponent(a),e=Math.pow(10,t),r=a/e;let o;for(let c=0;c<i.length;c++){const s=i[c];if(r<=s){o=s;break}}let n=o*e;return t>=-20&&(t<0?n=n.toFixed(-t):n=n.toFixed(0)),Number(n)},subNiceValueExtend=(a,i)=>{const[t,e]=a,o=(e-t)/(i-1),n=subNice(o),c=getPrecision(n),s=roundNumber(Math.floor(t/n)*n,c),m=roundNumber(s+i*n,c);return{min:s,max:m,interval:n}},nice=niceValueExtend(getValueExtend(srcData[1],!0)),count=(nice.max-nice.min)/nice.interval,sub=subNiceValueExtend(getValueExtend(srcData[2],!0),count);option={title:{text:"Awesome Chart"},tooltip:{trigger:"axis"},xAxis:{data:srcData[0]},yAxis:[{min:nice.min,max:nice.max,interval:nice.interval},{min:sub.min,max:sub.max,interval:sub.interval}],series:[{type:"bar",data:srcData[1]},{type:"line",data:srcData[2],yAxisIndex:1}]};
