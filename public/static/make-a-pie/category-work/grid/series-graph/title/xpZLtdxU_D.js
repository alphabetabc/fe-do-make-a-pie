var uploadedDataURL="/asset/get/s/data-1614828284945-i_KeAfQtX.png",fullImage=new Image;let waterLevel=68,sensorX=491;const calcMargin=(t,i,a=0)=>{let l=t*a,r=i*a,s=i*window.devicePixelRatio,n=t*window.devicePixelRatio,e=(i-2*r)*window.devicePixelRatio,o=(t-2*l)*window.devicePixelRatio;return{outerWidth:s,outerHeight:n,innerHeight:o,innerWidth:e,marginHeight:l*window.devicePixelRatio,marginWidth:r*window.devicePixelRatio}},marginObj=calcMargin(myChart.getHeight(),myChart.getWidth(),.1);console.log(marginObj);const getImage=(t,{outerWidth:i,outerHeight:a,innerHeight:l,innerWidth:r,marginHeight:s,marginWidth:n})=>{let e=new Image,o=document.createElement("canvas"),h=o.getContext("2d");return o.width=i,o.height=a,new Promise((m,u)=>{e.onload=function(){h.drawImage(e,0,0,e.width,e.height,n,s,r,l),m({src:o.toDataURL(),width:e.width,height:e.height})},e.src=t})},setData=(t,i,a,l)=>{let r=t.map(e=>Math.round(a*e)),s=i.map(e=>Math.round(l*e));return r.map((e,o)=>(xValue=e,yValue=i[o]||null,{value:[xValue,yValue]}))},getIntersectPoint=(t,i,a)=>{let l=myChart._dom.querySelector('canvas[data-zr-dom-id="zr_1"]').getContext("2d");const{outerWidth:r,outerHeight:s,innerHeight:n,innerWidth:e,marginHeight:o,marginWidth:h}=marginObj;let m=t*sensorX+h,u=o+a,w=e-t*sensorX,{data:c}=l.getImageData(m,u,w,1),d=[];c=c.reverse();for(let g=0;g<c.length;g){let x=c.slice(g,g+=4),p=g>0?d[d.length-1]:null;if(p&&p.join("")!==x.join(""))break;d.push(x)}return console.log(c),console.log(d),d.length};option={title:{text:"Awesome Chart"},grid:[{show:!0,left:"10%",bottom:"10%",top:"10%",zlevel:1,borderWidth:0,backgroundColor:{image:fullImage,repeat:"no-repeat"}}],xAxis:{show:!1,type:"value",min:0,max:1200,axisPointer:{show:!1},zlevel:1},yAxis:{show:!0,type:"value",min:0,max:1200,axisPointer:{show:!1},zlevel:1},series:[{zlevel:1,type:"line",smooth:!0,symbolSize:15,data:[],symbol:"circle",itemStyle:{color:"red"},label:{show:!0,position:"top"}},{zlevel:0,type:"line",symbolSize:0,color:"#2dc3b5",areaStyle:{color:"#2dc3b5"}}]},getImage(uploadedDataURL,marginObj).then(({src:t,width:i,height:a})=>{const{outerWidth:l,outerHeight:r,innerHeight:s,innerWidth:n,marginHeight:e,marginWidth:o}=marginObj;let h=84,m=45.56,u=n/i,w=s/a,c=s*(h-waterLevel)/(h-m);fullImage.src=t,option.xAxis.max=n,option.yAxis.max=h,option.yAxis.min=m;let d=waterLevel;option.series[1].data=[[0,d],[n,d]],myChart.setOption(option),myChart.resize(),setTimeout(()=>{let g=getIntersectPoint(u,w,c),x=setData([sensorX,(n-g-5)/u],[64,waterLevel],u,w);option.series[0].data=x,myChart.setOption(option),console.log(x)},1e3)});
