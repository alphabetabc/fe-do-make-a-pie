const 配置={数据量:50,定时:!0,延时波动的概率:.9},time=new Date().getTime(),base=配置.数据量,data=[],title=`不考虑丢包,异常的情况下,模拟新方案延时图效果,数据量: ${配置.数据量}`;let i=0;配置.定时&&setInterval(()=>{配置.数据量+=base,makeMock(),myChart.setOption({title:{text:`不考虑丢包,异常的情况下,模拟新方案延时图效果,数据量: ${data.length}`},series:[{data}]})},3e3),option={title:{text:title},xAxis:{type:"time"},yAxis:{},tooltip:{trigger:"axis",formatter:e=>{try{const t=e[0].data;return t?`${t.isNoPing?"推荐数据":"低延时"} : ${t.delay}`:""}catch{return""}}},color:["#3385ff"],animation:!1,dataZoom:[{type:"inside",filterMode:"none"}],series:[{type:"line",data,symbol:"circle",markLine:{silent:!0,data:[{yAxis:20,label:{formatter:()=>"低延时"},lineStyle:{color:"#09d174"}}]}}]};function makeMock(){const e=[];let t=~~(Math.random()*100+20),a=Math.random()>.5;for(;i<配置.数据量;)Math.random()<配置.延时波动的概率&&(t=~~(Math.random()*100+20),a=Math.random()>.5),e.push({value:[time+3e4*i,t],isNoPing:a,delay:t,itemStyle:{borderWidth:a?2:0,borderColor:"#fff"}}),i++;data.push(...e)}makeMock();
