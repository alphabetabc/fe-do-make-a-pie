var graph={nodes:[{name:"A",value:["教授","在职","党委办公室、校长办公室"],category:"中心教师",symbolSize:50,tooltip:{formatter:"{b0}:{c0}"}},{name:"B",category:"论文",value:["期刊论文","2005"],symbolSize:20,tooltip:{formatter:"{b0}:{c0}"}},{name:"C",category:"论文合作教师",symbolSize:50},{name:"D",category:"项目",value:["信息与通信工程学院","立项日期：20131101"],symbolSize:20,tooltip:{formatter:"{b0}:{c0}"}},{name:"N",category:"项目合作教师",symbolSize:50},{name:"Q",category:"项目",symbolSize:20},{name:"S",category:"项目",symbolSize:20},{name:"E",category:"专著专利",symbolSize:20,value:["专利文献","2009-07-21"],tooltip:{formatter:"{b0}:{c0}"}},{name:"W",category:"专著专利",symbolSize:20},{name:"Y",category:"专著专利",symbolSize:20},{name:"Z",category:"专著专利",symbolSize:20},{name:"F",category:"专著专利合作教师",symbolSize:50},{name:"O",category:"专著专利合作教师",symbolSize:50},{name:"P",category:"专著专利合作教师",symbolSize:50},{value:["信息与通信工程学院","信息工程 "],name:"G",category:"课程",symbolSize:20,tooltip:{formatter:"{b0}:{c0}"}},{name:"I",category:"课程",symbolSize:20},{name:"L",category:"课程",symbolSize:20},{name:"H",category:"课程合作教师",symbolSize:50},{name:"M",category:"课程合作教师",symbolSize:50}],links:[{source:"A",target:"B"},{source:"B",target:"C"},{source:"A",target:"D"},{source:"D",target:"N"},{source:"N",target:"Q"},{source:"N",target:"R"},{source:"A",target:"E"},{source:"E",target:"F"},{source:"F",target:"W"},{source:"F",target:"Y"},{source:"P",target:"Z"},{source:"E",target:"O"},{source:"E",target:"P"},{source:"A",target:"G"},{source:"G",target:"H"},{source:"G",target:"M"},{source:"M",target:"I"},{source:"M",target:"L"}]};const defaultCategory="中心教师",graphTitle="力导向关系图--实现点击节点展开折叠",currentGraph={nodes:{},links:{}},nodeMap={};function init(){for(let e=0;e<graph.nodes.length;e++)graph.nodes[e].category===defaultCategory&&(currentGraph.nodes[graph.nodes[e].name]=graph.nodes[e]),nodeMap[graph.nodes[e].name]=graph.nodes[e],nodeMap[graph.nodes[e].name].links={},nodeMap[graph.nodes[e].name].nodes={},nodeMap[graph.nodes[e].name].hasAppend=!1;for(let e=0;e<graph.links.length;e++){let t=graph.links[e];nodeMap[t.source]!==void 0&&nodeMap[t.target]!==void 0&&(nodeMap[t.source].links[t.target]=t,nodeMap[t.source].nodes[nodeMap[t.target].name]=nodeMap[t.target])}for(let e=0;e<graph.nodes.length;e++)graph.nodes[e].itemStyle=null,graph.nodes[e].label={normal:{show:graph.nodes[e].symbolSize>15}};redrawGraph()}function append(e){let t=nodeMap[e];if(t.hasAppend===!0||Object.keys(t.nodes).length===0||Object.keys(t.links).length===0){alert("无法继续展开");return}Object.values(t.nodes).forEach(o=>{currentGraph.nodes[o.name]=o}),Object.values(t.links).forEach(o=>{currentGraph.links[o.source+"_"+o.target]=o}),t.hasAppend=!0,redrawGraph()}function remove(e){let t=nodeMap[e];Object.values(t.nodes).forEach(o=>{delete currentGraph.nodes[o.name],o.hasAppend===!0&&Object.keys(o.nodes).length>0&&remove(o.name)}),Object.values(t.links).forEach(o=>{delete currentGraph.links[o.source+"_"+o.target]}),t.hasAppend=!1,redrawGraph()}function redrawGraph(){option.series[0].data=Object.values(currentGraph.nodes),option.series[0].links=Object.values(currentGraph.links),console.log(option),myChart.setOption(option)}const option={title:{text:graphTitle,top:"top",left:"center"},tooltip:{},legend:[],animation:!1,series:[{type:"graph",layout:"force",data:Object.values(currentGraph.nodes),links:Object.values(currentGraph.links),categories:[{name:"中心教师",itemStyle:{color:"#c23531"}},{name:"专著专利合作教师",itemStyle:{color:"#749f83"}},{name:"课程合作教师",itemStyle:{color:"#6e7074"}},{name:"论文合作教师",itemStyle:{color:"#2f4554"}},{name:"论文",itemStyle:{color:"#61a0a8"}},{name:"专著专利",itemStyle:{color:"#91c7ae"}},{name:"课程",itemStyle:{color:"#999ea4"}},{name:"项目合作教师",itemStyle:{color:"#DEB887"}},{name:"项目",itemStyle:{color:"#bda29a"}}],roam:!0,focusNodeAdjacency:!1,itemStyle:{normal:{borderColor:"#fff",borderWidth:1,shadowBlur:10,shadowColor:"rgba(0, 0, 0, 0.3)"}},label:{position:"right",formatter:"{b}"},lineStyle:{color:"target",opacity:.6,curveness:.3},emphasis:{lineStyle:{width:10}},force:{layoutAnimation:!1,repulsion:500}}]};init(),myChart.on("click",function(e){if(e.dataType==="node"){const t=nodeMap[e.data.name];t.hasAppend===!0?remove(t.name):append(t.name)}});
