let data=[{name:"海门",value:90},{name:"鄂尔多斯",value:102},{name:"齐齐哈尔",value:140}],geoCoordMap={海门:[121.15,31.89],鄂尔多斯:[109.781327,39.608266],齐齐哈尔:[123.97,47.33]},convertData=function(a){for(var t=[],e=0;e<a.length;e++){var l=geoCoordMap[a[e].name];l&&t.push({name:a[e].name,value:l.concat(a[e].value)})}return t},left=!1,top=!1,priority="top",config={ecBoxId:"chart-panel",lineColor:"#fff",L1:{time:.3,long:40},L2:{time:.3,long:40},text:{time:.5,text:"",font:"14px Arial",color:"#fff",padding:[10,10],width:120,height:60,lineHeight:24,backgroundColor:"rgba(50, 50, 50, 0.8)"}};option={backgroundColor:"#404a59",tooltip:{trigger:"item",triggerOn:"click",hideDelay:2e3,backgroundColor:"transparent",position(a){return getPosOrSize("pos",a)},formatter(a,t,e){canvasAnimation(a);let l=getPosOrSize("size");return`<canvas id="tCanvas" width="${l.width}" height="${l.height}">123</canvas>`}},legend:{show:!1},geo:{map:"china",label:{emphasis:{show:!1}},roam:!1,itemStyle:{normal:{areaColor:"#323c48",borderColor:"#111"},emphasis:{areaColor:"#2a333d"}}},series:[{name:"Tooltip Test",type:"effectScatter",coordinateSystem:"geo",data:convertData(data.sort(function(a,t){return t.value-a.value}).slice(0,6)),symbolSize:function(a){return a[2]/10},showEffectOn:"render",rippleEffect:{brushType:"stroke"},hoverAnimation:!0,label:{normal:{formatter:"{b}",position:"right",show:!0}},itemStyle:{normal:{color:"#f4e925",shadowBlur:10,shadowColor:"#333"}},zlevel:1}]};const canvasAnimation=a=>{setTimeout(function(){console.log(a),config.text.text=`地点：${a.name}
数量：${a.value[2]}`,new myTooltip("tCanvas",config)},0)},getPosOrSize=(a,t)=>{let e=config.L1.long*Math.sin(Math.PI/4),l=e+config.L2.long+config.text.width,s=e+config.text.height/2;if(a==="size")return config.width=l,config.height=s,{width:l,height:s};{let i=document.getElementById(config.ecBoxId),n=i.offsetWidth,h=i.offsetHeight,r=t[0],o=t[1];return left=!1,r+l>=n-30&&(r=r-l-15,left=!0),priority==="top"?(top=!0,o=o-s-15,o<=0&&(o=t[1],top=!1),[r,o]):(top=!1,o+s>=h&&(o=o-s-15,top=!0),[r,o])}};class myTooltip{constructor(t,e){this.config=e,this.totalTime=0,this.stage=new createjs.Stage(t),this.timeline=new TimelineMax({repeat:0}),this.g=new createjs.Graphics,this.lineShape=new createjs.Shape(this.g),this.textShape=new createjs.Shape,this.stage.addChild(this.lineShape,this.textShape),this.init(),this.begin(),this.update()}init(){this.start=[0,0],left&&(this.start[0]=this.config.width),top&&(this.start[1]=this.config.height)}begin(){this.L1(),this.L2(),this.addText()}L1(){let t=this,e=t.config,l=new TimelineMax,s={s:0},i=e.L1.long*Math.sin(Math.PI/4);left?top?this.L1End=[t.start[0]-i,t.start[1]-i]:this.L1End=[t.start[0]-i,t.start[1]+i]:top?this.L1End=[i,t.start[1]-i]:this.L1End=[i,i],l.to(s,e.L1.time,{s:1,onUpdate(){let n=s.s;left?top?t.g.c().s(e.lineColor).mt(...t.start).lt(t.start[0]-i*n,t.start[1]-i*n):t.g.c().s(e.lineColor).mt(...t.start).lt(t.start[0]-i*n,t.start[1]+i*n):top?t.g.c().s(e.lineColor).mt(...t.start).lt(i*n,t.start[1]-i*n):t.g.c().s(e.lineColor).mt(...t.start).lt(i*n,i*n),t.update()}}),this.timeline.add(l,this.totalTime),this.totalTime+=e.L1.time}L2(){let t=this,e=t.config,l=new TimelineMax,s={s:0};l.to(s,e.L2.time,{s:1,onUpdate(){let i=s.s;left?t.g.c().s(e.lineColor).mt(...t.start).lt(...t.L1End).lt(t.L1End[0]-e.L2.long*i,t.L1End[1]):t.g.c().s(e.lineColor).mt(...t.start).lt(...t.L1End).lt(t.L1End[0]+e.L2.long*i,t.L1End[1]),t.update()}}),this.timeline.add(l,this.totalTime),this.totalTime+=e.L2.time}addText(){let t=this,e=t.config,l=new TimelineMax,s={s:0},i=[t.L1End[0]+e.L2.long,t.L1End[1]];left&&(i=[t.L1End[0]-e.L2.long,t.L1End[1]]),l.to(s,e.text.time,{s:1,onStart(){let n=0,h=0;left?n=i[0]-e.text.width:n=i[0],t.g.c().s(e.lineColor).mt(...t.start).lt(...t.L1End).lt(...i),t.text=new createjs.Text(e.text.text,e.text.font,e.text.color),t.text.alpha=0,t.text.lineHeight=e.text.lineHeight,t.text.x=n+e.text.padding[0],t.text.y=i[1]-e.text.height/2+e.text.padding[1],t.stage.addChild(t.text),t.textShape.graphics.c().f(e.text.backgroundColor).rr(n,i[1]-e.text.height/2,e.text.width,e.text.height,5),t.textShape.alpha=0,t.update()},onUpdate(){t.text.alpha=s.s,t.textShape.alpha=s.s,t.update()}}),this.timeline.add(l,this.totalTime)}update(){this.stage.update()}}window.addEventListener("resize",a=>{let t=document.getElementById("tCanvas");t&&(t.style.display="none")});
